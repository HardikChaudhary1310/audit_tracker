<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <title>
        <%= title %>
    </title>
    <style>
        /* General Reset */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* Basic Styles */
        body {
            font-family: Arial, sans-serif;
            /* background-color: #a1a6b8;
            background: linear-gradient(to right, #888080, #a3adcd); */
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            color: #333;
 /* background: linear-gradient(to bottom right, #702db7, #4171c5); */
 background: linear-gradient(90deg, #674dcd, rgb(56, 131, 196), #52d7ee);

transition: background-color 0.36s, box-shadow 0.5s;
 background-image: var(--gradient);
animation: gradientBackground 10s infinite; 

} 

@keyframes gradientBackground {
0% {
background: linear-gradient(to bottom, #674dcd, #f0f8ff);
background-position: left;
}
25% {
background: linear-gradient(to bottom, #674dcd, #f0f8ff);
background-position: right
}
50% {
background: linear-gradient(to bottom, #674dcd, #f0f8ff);
background-position: left;
}
75% {
background: linear-gradient(to bottom, #674dcd, #f0f8ff);
background-position: right
}
100% {
background: linear-gradient(to bottom, #674dcd, #f0f8ff);
background-position: left;
}
} 


        .container {
            position: relative;
            width: 768px;
            max-width: 100%;
            min-height: 480px;
            border-radius: 35px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.40);
            overflow: hidden;
            display: flex;
        }

        .form-container, .overlay-container {
            position: absolute;
            top: 0;
            height: 100%;
            transition: transform 0.6s ease-in-out;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            width: 50%;
        }

        .form-container {
            left: 0;
            padding: 40px;
            background-color: white;
            z-index: 2;
        }

        .form-container h2 {
            margin-bottom: 20px;
        }

        /* .social-login {
            display: flex;
            justify-content: space-around;
            margin-bottom: 20px;
        }

        .social-login button {
            background: none;
            border: 1px solid #ccc;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .social-login button:hover {
            background-color: #f0f0f0;
        }

        .social-login img {
            width: 20px;
            height: 20px;
        } */

        .social-login {
            display: flex;
            justify-content: space-around;
            margin-bottom: 20px;
        }

        .social-login button {
            background: none;
            border: 1px solid #ccc;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.3s;
            overflow: hidden;
        }

        .social-login button img {
            width: 18px;
            height: 18px;
            border-radius: 50%;
        }

        .social-login button:hover {
            background-color: #f0f0f0;
        }

        .input-group {
            margin-bottom: 15px;
            width: 100%;
        }

        label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
        }

        input {
            width: 100%;
            border: 1px solid #ccc;
            background-color: #f9f9f9;
            padding: 14px 19px;
            font-size: 13px;
            border-radius: 15px;
            outline: none;
            size:inherit;
        }

        .password-wrapper {
            position: relative;
        }

        .toggle-password {
            position: absolute;
            right: 10px;
            top: 65%;
            transform: translateY(-50%);
            cursor: pointer;
            font-size: 14px;
            color: #777;
        }

        .toggle-password:hover {
            color: #333;
        }

        button[type="submit"] {
            width: 100%;
            padding: 11px;
            background-color: #512da8;
            color: #fff;
            font-size: 12px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button[type="submit"]:hover {
            background-color: #fff;
            color: #512da8;
            border: 1px solid #512da8;
        }

        .signup-link {
            text-align: center;
            margin-top: 20px;
        }

        .signup-link a {
            color: #007BFF;
            text-decoration: none;
        }

        .signup-link a:hover {
            text-decoration: underline;
        }

        .overlay-container {
            right: 0;
            background: linear-gradient(to bottom right, #6318b4, #3572da);
            color: white;
            padding: 40px;
            text-align: center;
            z-index: 1;
            width: 50%;
        }

        .overlay-container h2 {
            margin-bottom: 10px;
        }

        .overlay-container p {
            margin-bottom: 20px;
        }

        .overlay-container button {
            background-color: #512da8;
            color: #fff;
            font-size: 12px;
            padding: 10px 40px;
            border: 1px solid transparent;
            border-radius: 20px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .overlay-container button:hover {
            background-color: transparent;
            border-color: #fff;
        }

        .container.sign-up-mode .form-container {
            transform: translateX(100%);
        }

        .container.sign-up-mode .overlay-container {
            transform: translateX(-100%);
        }

        .error {
            color: red;
            font-size: 14px;
            margin-top: 5px;
        }

        .overlay-container.active {
            transform: translateX(-50%);
        }

    </style>
</head>
<body>
    <div class="container" id="container">
        <div class="form-container">
            <h3 id="formTitle">
                <%= isSignup ? 'Sign Up' : 'Sign In' %>
            </h3>

            <% if (error) { %>
                <div class="alert alert-danger">
                    <%= error %>
                </div>
                <% } %>
            
            <% if (success) { %>
                <div class="alert alert-success">
                    <%= success %>
                </div>
                <% } %>

            <form id="form" method="POST" action="<%= isSignup ? '/signup' : '/login' %>">
                <div class="input-group">
                    <label for="email">Email ID</label>
                    <input type="email" id="email" name="username" required placeholder="Enter your Email">
                    <div class="error" id="emailError"></div>
                </div>
                <div class="input-group password-wrapper">
                    <label for="password">Password</label>
                    <input type="password" id="password" name="password" required placeholder="Enter your password">
                    <span class="toggle-password" onclick="togglePassword('password')">üëÅÔ∏è</span>
                    <div class="error" id="passwordError"></div>
                </div>
                <div id="confirmPasswordGroup" class="input-group password-wrapper" style="display: <%= isSignup ? 'block' : 'none' %>">
                    <label for="confirmPassword">Confirm Password</label>
                    <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm your password">
                    <span class="toggle-password" onclick="togglePassword('confirmPassword')">üëÅÔ∏è</span>
                    <div class="error" id="confirmPasswordError"></div>
                </div>
                <button type="submit">
                    <%= isSignup ? 'Sign Up' : 'Sign In' %>
                </button>
            </form>
            <div class="signup-link">
                <span id="toggleLink">
                    <%= isSignup ? 'Already have an account?' : "Don't have an account?" %>
                        <a href="<%= isSignup ? '/' : '/signup' %>">
                            <%= isSignup ? 'Sign In' : 'Sign Up' %>
                        </a>
                </span>
            </div>
        </div>
        <div class="overlay-container" id="overlayContainer">
            <h3 id="overlayTitle">
                <%= isSignup ? 'Welcome Back!' : 'Hi, Friend!' %>
            </h3>
            <p id="overlayText">
                <%= isSignup ? 'To keep connected with us, please login with your personal info!'
                    : 'Register with your personal details to use all site features' %>
            </p>
            <button id="overlayButton" onclick="window.location.href='<%= isSignup ? '/' : '/signup' %>'">
                <%= isSignup ? 'Sign In' : 'Sign Up' %>
            </button>
        </div>
    </div>

    <script>
        function togglePassword(id) {
            const input = document.getElementById(id);
            input.type = input.type === 'password' ? 'text' : 'password';
        }

        document.getElementById('form').addEventLi   s tener('submit',   a s y n c f u nction(e) {
ault();

            const email = document.getElementById("email").value.trim();
            const password = document.getElementById("password").value.trim();
            const confirmPassword = document.getElementById("confirmPassword")?.value.trim();

            let isValid = true;

            // Reset errors
            document.getElementById("emailError").textContent = "";
            document.getElementById("passwordError").textContent = "";
            document.getElementById("confirmPasswordError").textContent = "";

            // Validate email domain
            if (!email.endsWith("@shivalikbank.com")) {
                document.getElementById("emailError").textContent = "Email must end with @shivalikbank.com.";
                isValid = false;
            }

            // Validate password
            const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{6,}$/;
            if (!passwordRegex.test(password)) {
                document.getElementById("passwordError").textContent = "Password must be at least 6 characters long, include a number, a special character, and a capital letter.";
                isValid = false;
            }

            // Validate confirm password (if sign-up)
                      = isSignup %> && password !== confirmPassword) {
                document.getElementById("confirmPasswordError").textContent = "Passwords do not match.";
                isValid = false;
            }

            if (isValid) {
                try {
                                       esponse = await fetch(this.action, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({
                            username: email,
                            password: password,
                            confirmPassword: <%= isSignup %> ? confirmPassword : undefined
                        }),
                        credentials: 'include'
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.message || 'An error occurred');
                    }

                    const data = await response.json();

                                ) {
                        alert("Login Successful! Redirecting...");
                        window.location.href = "/home";
                    } else {
                        alert("Signup Successful! Please check your email for verification.");
                        window.location.href = "/";
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert(error.message || 'An error occurred. Please try again.');
                }
            } else {
                alert("Please correct the errors before submitting.");
            }
        });
    </script>
</body>
</html>
