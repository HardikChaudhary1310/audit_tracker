<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <title>Login and Sign-Up</title>
    <style>
        /* General Reset */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* Basic Styles */
        body {
            font-family: Arial, sans-serif;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            color: #333;
            background: linear-gradient(90deg, #674dcd, rgb(56, 131, 196), #52d7ee);
            transition: background-color 0.36s, box-shadow 0.5s;
            background-image: var(--gradient);
            animation: gradientBackground 10s infinite;
        }

        @keyframes gradientBackground {
        0% {
        background: linear-gradient(to bottom, #674dcd, #f0f8ff);
        background-position: left;
        }
        25% {
        background: linear-gradient(to bottom, #674dcd, #f0f8ff);
        background-position: right
        }
        50% {
        background: linear-gradient(to bottom, #674dcd, #f0f8ff);
        background-position: left;
        }
        75% {
        background: linear-gradient(to bottom, #674dcd, #f0f8ff);
        background-position: right
        }
        100% {
        background: linear-gradient(to bottom, #674dcd, #f0f8ff);
        background-position: left;
        }
        }


        .container {
            position: relative;
            width: 768px;
            max-width: 95%; /* Allow slight shrinking on smaller screens */
            min-height: 480px;
            border-radius: 35px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.40);
            overflow: hidden;
            display: flex;
            background-color: white; /* Base background for containers */
        }

        .form-container, .overlay-container {
            position: absolute;
            top: 0;
            height: 100%;
            transition: all 0.6s ease-in-out; /* Use 'all' for smoother transitions */
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            width: 50%;
            padding: 40px;
        }

        .form-container {
            left: 0;
            background-color: white;
            z-index: 2;
        }

        .form-container h3 { /* Use h3 to match HTML */
            margin-bottom: 20px;
            font-weight: bold;
        }

        .social-login {
            display: flex;
            justify-content: space-around;
            margin-bottom: 20px;
        }

        .social-login button {
            background: none;
            border: 1px solid #ccc;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.3s;
            overflow: hidden;
        }

        .social-login button img {
            width: 18px;
            height: 18px;
            border-radius: 50%;
        }

        .social-login button:hover {
            background-color: #f0f0f0;
        }

        .input-group {
            margin-bottom: 15px;
            width: 100%;
        }

        label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
            font-size: 14px; /* Slightly smaller labels */
        }

        input {
            width: 100%;
            border: 1px solid #ccc;
            background-color: #eee; /* Slightly different background */
            padding: 12px 15px; /* Adjust padding */
            font-size: 14px; /* Consistent font size */
            border-radius: 8px; /* Less rounded */
            outline: none;
        }

        .password-wrapper {
            position: relative;
        }

        .toggle-password {
            position: absolute;
            right: 15px; /* Adjust position */
            top: 50%;   /* Center vertically */
            transform: translateY(-50%);
            cursor: pointer;
            font-size: 16px; /* Slightly larger icon */
            color: #777;
        }

        .toggle-password:hover {
            color: #333;
        }

        button[type="submit"] {
            width: auto; /* Fit content */
            min-width: 120px;
            padding: 12px 30px; /* Adjust padding */
            background: linear-gradient(90deg, #512da8, #7b1fa2); /* Gradient background */
            color: #fff;
            font-size: 14px; /* Consistent font size */
            font-weight: bold;
            border: none;
            border-radius: 25px; /* Pill shape */
            cursor: pointer;
            transition: all 0.3s ease; /* Smooth transition */
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-top: 10px; /* Add margin */
        }

        button[type="submit"]:hover {
            background: linear-gradient(90deg, #7b1fa2, #512da8); /* Reverse gradient on hover */
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            transform: translateY(-2px); /* Slight lift */
        }
         button[type="submit"]:active {
            transform: translateY(0); /* Press down effect */
        }


        .signup-link {
            text-align: center;
            margin-top: 25px; /* More space */
            font-size: 14px;
        }

        .signup-link a {
            color: #512da8; /* Match button color */
            text-decoration: none;
            font-weight: bold;
        }

        .signup-link a:hover {
            text-decoration: underline;
        }

        /* Overlay styles */
        .overlay-container {
            left: 50%; /* Start on the right */
            width: 50%;
            background: linear-gradient(to bottom right, #6318b4, #3572da);
            color: white;
            z-index: 100; /* Ensure overlay is on top */
            transform: translateX(0); /* Initial state */
            text-align: center;
        }

        .overlay-panel {
             position: absolute;
             top: 0;
             left: 0;
             width: 100%;
             height: 100%;
             display: flex;
             flex-direction: column;
             justify-content: center;
             align-items: center;
             padding: 40px;
             text-align: center;
             transition: transform 0.6s ease-in-out;
        }

         .overlay-left {
             transform: translateX(-20%); /* Initially hidden */
             z-index: 95;
         }

         .overlay-right {
             transform: translateX(0); /* Initially visible */
             right: 0;
             z-index: 100;
         }

        .overlay-container h3 { /* Match form style */
            margin-bottom: 15px;
             font-weight: bold;
        }

        .overlay-container p {
            margin-bottom: 25px;
            font-size: 14px;
            line-height: 1.5;
        }

        .overlay-container button.ghost { /* Ghost button style */
            background-color: transparent;
            border: 2px solid #fff; /* White border */
            color: #fff;
            font-size: 12px;
            font-weight: bold;
            padding: 10px 40px;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .overlay-container button.ghost:hover {
            background-color: rgba(255, 255, 255, 0.1); /* Slight white background */
        }
         .overlay-container button.ghost:active {
            transform: scale(0.98);
        }

        /* Animation / Panel Switching */
        .container.right-panel-active .sign-in-container {
            transform: translateX(100%);
             opacity: 0;
             z-index: 1;
        }
         .container.right-panel-active .sign-up-container {
            transform: translateX(100%);
            opacity: 1;
            z-index: 5; /* Bring signup form forward */
            animation: show 0.6s;
         }


         .container.right-panel-active .overlay-container {
            transform: translateX(-100%); /* Slide overlay left */
         }

         .container.right-panel-active .overlay-left {
            transform: translateX(0); /* Show left overlay panel */
             z-index: 100;
         }

         .container.right-panel-active .overlay-right {
            transform: translateX(20%); /* Hide right overlay panel */
             z-index: 95;
         }


        .sign-in-container {
            left: 0;
            width: 50%;
            z-index: 2; /* Sign in starts on top */
        }

        .sign-up-container {
            left: 0;
            width: 50%;
            opacity: 0; /* Sign up starts hidden */
            z-index: 1;
        }

        @keyframes show {
             0%, 49.99% {
                 opacity: 0;
                 z-index: 1;
             }
             50%, 100% {
                 opacity: 1;
                 z-index: 5;
             }
         }


        /* Error and Success Message Styling */
        .error {
            color: #e74c3c; /* Red */
            font-size: 13px;
            margin-top: 5px;
            min-height: 18px; /* Reserve space */
            text-align: left;
            width: 100%;
        }
        .message {
            color: #2ecc71; /* Green */
            font-size: 14px;
            margin-top: 10px;
            margin-bottom: 10px;
             min-height: 20px; /* Reserve space */
             text-align: center;
             font-weight: bold;
        }

         /* Add some spacing below the button */
        #form {
            display: flex;
            flex-direction: column;
            align-items: center; /* Center button */
        }
        #form button[type="submit"] {
             margin-bottom: 15px; /* Space below button */
        }

    </style>
</head>
<body>
    <div class="container" id="container">

        <!-- Sign Up Form -->
        <div class="form-container sign-up-container">
            <form id="signUpForm" onsubmit="handleSubmit(event)">
                <h3>Create Account</h3>
                 <div class="message" id="signUpMessage"></div> <!-- Message area for signup -->
                <!-- Social login icons if desired -->
                <!-- <span>or use your email for registration</span> -->
                <div class="input-group">
                    <!-- <label for="signUpEmail">Email ID</label> -->
                    <input type="email" id="signUpEmail" name="email" required placeholder="Email (@shivalikbank.com)">
                    <div class="error" id="signUpEmailError"></div>
                </div>
                <div class="input-group password-wrapper">
                    <!-- <label for="signUpPassword">Password</label> -->
                    <input type="password" id="signUpPassword" name="password" required placeholder="Password">
                    <span class="toggle-password" onclick="togglePasswordVisibility('signUpPassword')"><i class="fas fa-eye"></i></span>
                    <div class="error" id="signUpPasswordError"></div>
                </div>
                <div class="input-group password-wrapper">
                    <!-- <label for="confirmPassword">Confirm Password</label> -->
                    <input type="password" id="confirmPassword" name="confirmPassword" required placeholder="Confirm Password">
                    <span class="toggle-password" onclick="togglePasswordVisibility('confirmPassword')"><i class="fas fa-eye"></i></span>
                    <div class="error" id="confirmPasswordError"></div>
                </div>
                <button type="submit">Sign Up</button>
            </form>
        </div>

        <!-- Sign In Form -->
        <div class="form-container sign-in-container">
            <form id="signInForm" onsubmit="handleSubmit(event)">
                <h3>Sign In</h3>
                 <div class="message" id="signInMessage"></div> <!-- Message area for signin -->
                <!-- Social login icons if desired -->
                <!-- <span>or use your account</span> -->
                <div class="input-group">
                    <!-- <label for="signInEmail">Email ID</label> -->
                    <input type="email" id="signInEmail" name="email" required placeholder="Email (@shivalikbank.com)">
                    <div class="error" id="signInEmailError"></div>
                </div>
                <div class="input-group password-wrapper">
                    <!-- <label for="signInPassword">Password</label> -->
                    <input type="password" id="signInPassword" name="password" required placeholder="Password">
                    <span class="toggle-password" onclick="togglePasswordVisibility('signInPassword')"><i class="fas fa-eye"></i></span>
                    <div class="error" id="signInPasswordError"></div>
                </div>
                <!-- <a href="#">Forgot your password?</a> -->
                <button type="submit">Sign In</button>
            </form>
        </div>

        <!-- Overlay Panels -->
        <div class="overlay-container">
            <div class="overlay">
                 <!-- Left Overlay Panel (Shown when Sign Up is active) -->
                 <div class="overlay-panel overlay-left">
                    <h3>Welcome Back!</h3>
                    <p>Already have an account? Sign in to access your dashboard.</p>
                    <button class="ghost" id="signInButton">Sign In</button>
                </div>
                 <!-- Right Overlay Panel (Shown when Sign In is active) -->
                <div class="overlay-panel overlay-right">
                    <h3>Hello, Friend!</h3>
                    <p>New here? Enter your details and start your journey with us.</p>
                    <button class="ghost" id="signUpButton">Sign Up</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        const signUpButton = document.getElementById('signUpButton');
        const signInButton = document.getElementById('signInButton');
        const container = document.getElementById('container');

        // Flags to track current state
        let isLoginActive = true; // Start with Sign In active

        signUpButton.addEventListener('click', () => {
            container.classList.add('right-panel-active');
            isLoginActive = false;
             clearMessagesAndErrors(); // Clear messages when switching panels
        });

        signInButton.addEventListener('click', () => {
            container.classList.remove('right-panel-active');
             isLoginActive = true;
             clearMessagesAndErrors(); // Clear messages when switching panels
        });

        // Function to toggle password visibility
        function togglePasswordVisibility(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling.querySelector('i'); // Find the icon within the span
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                 icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        // Function to clear all error and message fields
        function clearMessagesAndErrors() {
            document.getElementById("signInEmailError").textContent = "";
            document.getElementById("signInPasswordError").textContent = "";
            document.getElementById("signInMessage").textContent = "";
            document.getElementById("signUpEmailError").textContent = "";
            document.getElementById("signUpPasswordError").textContent = "";
            document.getElementById("confirmPasswordError").textContent = "";
            document.getElementById("signUpMessage").textContent = "";
        }

        // --- Form Submission Handler ---
        async function handleSubmit(event) {
            event.preventDefault(); // Prevent default form submission

             clearMessagesAndErrors(); // Clear previous messages/errors on new submission

            let email, password, confirmPassword, formId;
            let emailErrorElem, passwordErrorElem, confirmPasswordErrorElem, messageElem;

            // Determine which form was submitted based on the current state
            if (isLoginActive) { // Handle Sign In
                formId = '#signInForm';
                email = document.getElementById("signInEmail").value.trim();
                password = document.getElementById("signInPassword").value.trim();
                emailErrorElem = document.getElementById("signInEmailError");
                passwordErrorElem = document.getElementById("signInPasswordError");
                messageElem = document.getElementById("signInMessage");
            } else { // Handle Sign Up
                formId = '#signUpForm';
                email = document.getElementById("signUpEmail").value.trim();
                password = document.getElementById("signUpPassword").value.trim();
                confirmPassword = document.getElementById("confirmPassword").value.trim();
                 emailErrorElem = document.getElementById("signUpEmailError");
                passwordErrorElem = document.getElementById("signUpPasswordError");
                confirmPasswordErrorElem = document.getElementById("confirmPasswordError");
                 messageElem = document.getElementById("signUpMessage");
            }

            let isValid = true;

            // --- Frontend Validation ---
            // Validate email domain
            if (!email) {
                 emailErrorElem.textContent = "Email is required.";
                 isValid = false;
            } else if (!email.endsWith("@shivalikbank.com")) {
                emailErrorElem.textContent = "Email must end with @shivalikbank.com.";
                isValid = false;
            }

            // Validate password format
            const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{6,}$/;
             if (!password) {
                 passwordErrorElem.textContent = "Password is required.";
                 isValid = false;
            } else if (!passwordRegex.test(password)) {
                passwordErrorElem.textContent = "Min 6 chars: 1 uppercase, 1 lowercase, 1 number, 1 symbol.";
                isValid = false;
            }

            // Validate confirm password (only for sign-up)
            if (!isLoginActive) {
                 if (!confirmPassword) {
                     confirmPasswordErrorElem.textContent = "Please confirm your password.";
                     isValid = false;
                 } else if (password && password !== confirmPassword) { // Only check if password exists
                    confirmPasswordErrorElem.textContent = "Passwords do not match.";
                    isValid = false;
                }
            }

            // If frontend validation fails, stop here
            if (!isValid) {
                 messageElem.textContent = "Please fix the errors above.";
                 messageElem.style.color = '#e74c3c'; // Red color for errors
                return;
            }

            // --- Prepare Data for Backend ---
            const formData = {
                username: email, // Backend expects 'username' for email
                password,
            };
            // Add confirmPassword only if signing up
            if (!isLoginActive) {
                formData.confirmPassword = confirmPassword;
            }

             // Disable submit button during request
            const submitButton = document.querySelector(`${formId} button[type="submit"]`);
            submitButton.disabled = true;
            submitButton.textContent = isLoginActive ? 'Signing In...' : 'Signing Up...';

            // --- Send Request to Backend ---
            try {
                const response = await fetch(isLoginActive ? '/login' : '/signup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData),
                });

                const data = await response.json(); // Try to parse JSON regardless of status

                if (!response.ok) {
                    // Handle errors from the backend (e.g., user exists, invalid credentials)
                     messageElem.textContent = `Error: ${data.message || 'An unknown error occurred.'}`;
                     messageElem.style.color = '#e74c3c'; // Red color for errors
                    console.error("Backend Error:", data);
                } else {
                    // Handle success
                    messageElem.textContent = data.message; // Display success message from backend
                     messageElem.style.color = '#2ecc71'; // Green color for success

                    if (isLoginActive) {
                        // Login successful - redirect after a short delay
                        setTimeout(() => {
                             window.location.href = "/home"; // Redirect to the home page
                         }, 1500); // 1.5 second delay
                    } else {
                         // Signup successful - user needs to verify email
                        // Optionally clear the form or disable it further
                         document.getElementById('signUpForm').reset(); // Clear form
                        console.log("Signup success, waiting for email verification.");
                        // No automatic redirect for signup
                    }
                }
            } catch (error) {
                // Handle network errors or other exceptions during fetch
                 messageElem.textContent = "Network error or server issue. Please try again.";
                 messageElem.style.color = '#e74c3c';
                console.error("Fetch Error:", error);
            } finally {
                 // Re-enable submit button
                 submitButton.disabled = false;
                 submitButton.textContent = isLoginActive ? 'Sign In' : 'Sign Up';
            }
        }
    </script>
</body>
</html>